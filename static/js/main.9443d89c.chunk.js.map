{"version":3,"sources":["ActionList.js","ScheduleChart.js","Messages.js","App.js","serviceWorker.js","index.js"],"names":["axious","require","useStyles","makeStyles","theme","wrapper","height","margin","spacing","padding","backgroundColor","overflowY","header","fontWeight","marginBottom","actionBlock","teal","block","blueGrey","ActionList","classes","useState","actions","setActions","useEffect","getActions","get","then","data","JSON","parse","Grid","container","item","xs","direction","justify","alignItems","Paper","elevation","className","length","company_name","map","action","key","action_id","action_name","action_parametrs","argument","style","color","textAlign","ScheduleChart","width","chartType","loader","type","label","Date","options","gantt","trackHeight","rootProps","src","process","alt","icon","orange","fontSize","iconSmall","blue","Messages","messages","setMessages","getMessages","IconButton","onClick","LinearProgress","message","id","user_name","phone_number","date_time","Divider","component","paddingTop","valid","message_text","root","palette","grey","appBar","zIndex","menuButton","marginRight","title","flexGrow","sideBar","position","top","left","active","App","page","setPage","AppBar","Toolbar","edge","aria-label","Typography","variant","aria-controls","aria-haspopup","console","log","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9443d89c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Paper, Grid } from '@material-ui/core';\nimport { teal, blueGrey } from '@material-ui/core/colors/';\n\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst axious = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: '70vh',\n    // width: '80vw',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    backgroundColor: 'white',\n    overflowY: 'scroll',\n  },\n  header: {\n    fontWeight: 800,\n    marginBottom: theme.spacing(2),\n  },\n  actionBlock: {\n    padding: theme.spacing(1),\n    backgroundColor: teal[300],\n  },\n  block: {\n    padding: theme.spacing(1),\n    backgroundColor: blueGrey[100],\n  },\n}));\n\nconst ActionList = () => {\n  const classes = useStyles();\n  const [ actions, setActions ] = useState([]);\n\n  useEffect(() => { setActions(getActions()) }, []);\n\n  const getActions = () => {\n    // axious.get(`http://84.201.146.49:8000/actions/2`)\n    axious.get(`https://cors-anywhere.herokuapp.com/http://84.201.146.49:8000/actions/2`)\n      .then(({ data }) => { setActions(JSON.parse(data)) });\n  }\n\n  return (\n    <Grid container item xs={12} direction=\"row\" justify=\"center\" alignItems=\"center\" >\n      <Grid item xs={8}>\n        <Paper elevation={2} className={classes.wrapper}>\n          <h4>{actions && actions.length && actions[0].company_name} </h4>\n\n          <Grid container spacing={4} item xs={12} className={classes.header}>\n            <Grid item xs={4}>Call to action</Grid>\n            <Grid item xs={8}>Subjects</Grid>\n          </Grid>\n          <Grid container spacing={2} item xs={12}>\n            {actions && actions.map(action => (\n              <Grid container spacing={4} item xs={12} key={`action_${action.action_id}`}>\n                <Grid item xs={4}> \n                  <Paper className={classes.actionBlock} elevation={2}>{action.action_name}</Paper>\n                </Grid>\n                <Grid item container spacing={2} xs={8}> \n                  {action && action.action_parametrs && action.action_parametrs.map(argument => (            \n                    <Grid item key={`argument_${argument}`}> \n                      <Paper className={classes.block} elevation={2}>{argument}</Paper>\n                    </Grid>\n                  ))}\n                   <Grid item key={`argument_add`}> \n                    <Paper className={classes.block} elevation={2}  style={{padding: '4px 12px 4px 12px', color: 'green'}}><AddCircleIcon /></Paper>\n                  </Grid>\n                </Grid>\n              </Grid>\n            ))}\n              <Grid container spacing={4} item xs={12} key={`action_add`}>\n                <Grid item xs={4}> \n                  <Paper className={classes.block} elevation={2} style={{textAlign: 'right'}}>\n                    + add call to action\n                  </Paper>\n                </Grid>\n              </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ActionList;\n","import React from 'react';\n\nimport {Chart} from 'react-google-charts';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    textAlign: 'center',\n  },\n  header: {\n    fontWeight: 800,\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst ScheduleChart = () => {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.wrapper}>\n       <div className={classes.header}>Schedule</div>\n      <Chart\n        width={'100%'}\n        height={'250px'}\n        chartType=\"Gantt\"\n        loader={<div>Loading Cart</div>}\n        data={[\n          [\n            { type: 'string', label: 'Task ID' },\n            { type: 'string', label: 'Task Name' },\n            { type: 'string', label: 'Resource' },\n            { type: 'date', label: 'Start Time' },\n            { type: 'date', label: 'End Time' },\n            { type: 'number', label: 'Duration' },\n            { type: 'number', label: 'Percent Complete' },\n            { type: 'string', label: 'Dependencies' },\n          ],\n          [\n            'ant',\n            'Антон',\n            'ant',\n            new Date(2019, 10, 27, 10),\n            new Date(2019, 10, 27, 11),\n            null,\n            100,\n            null,\n          ],\n          [\n            'iva',\n            'Иван',\n            'iva',\n            new Date(2019, 10, 27, 10, 30),\n            new Date(2019, 10, 27, 12, 30),\n            null,\n            100,\n            null,\n          ],\n          [\n            'kir',\n            'Кирилл',\n            'kir',\n            new Date(2019, 10, 27, 11),\n            new Date(2019, 10, 27, 14),\n            null,\n            100,\n            null,\n          ],\n          [\n            'sta',\n            'Стас',\n            'sta',\n            new Date(2019, 10, 27, 14, 30),\n            new Date(2019, 10, 27, 20, 30),\n            null,\n            100,\n            null,\n          ],\n          [\n            'dav',\n            'Давид',\n            'dav',\n            new Date(2019, 10, 27, 10, 30),\n            new Date(2019, 10, 27, 16, 30),\n            null,\n            100,\n            null,\n          ],\n        ]}\n        options={{\n          height: 250,\n          gantt: {\n            trackHeight: 30,\n          },\n        }}\n        rootProps={{ 'data-testid': '2' }}\n      />\n      <img src={`${process.env.PUBLIC_URL}/cclogo.jpg`} width=\"360\"  height=\"90\" alt=\"\"></img>\n    </div>\n  );\n}\n\nexport default ScheduleChart;\n","import React, { useEffect, useState } from 'react';\n\nimport { Paper, Grid, Divider, LinearProgress, IconButton } from '@material-ui/core';\nimport { blueGrey, blue, orange } from '@material-ui/core/colors/';\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CallIcon from '@material-ui/icons/Call';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ScheduleChart from './ScheduleChart';\n\nconst axious = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: '70vh',\n    width: '60vw',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    backgroundColor: 'white',\n    overflowY: 'scroll',\n  },\n  header: {\n    fontWeight: 800,\n    marginBottom: theme.spacing(2),\n  },\n  block: {\n    padding: theme.spacing(1),\n    backgroundColor: blueGrey[50],\n  },\n  icon: {\n    color: orange[400],\n    fontSize: 48,\n  },\n  iconSmall: {\n    fontSize: 30,\n    color: blue[800],\n  },\n}));\n\nconst Messages = () => {\n  const classes = useStyles();\n\n  const [ messages, setMessages ] = useState([]);\n\n  // useEffect(() => {\n  //   getMessages();\n  //   setInterval(async () => {\n  //     await getMessages();\n  //   }, 10000);\n  //   return () => clearInterval();\n  // }, []);\n\n  useEffect(() => {getMessages()}, []);\n\n  const getMessages = () => {\n    // axious.get(`http://84.201.146.49:8000/messages/2`)\n    axious.get(`https://cors-anywhere.herokuapp.com/http://84.201.146.49:8000/messages/2`)\n      .then(({ data }) => { setMessages(JSON.parse(data)); });\n  }\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\n      <Grid container item direction=\"row\" justify=\"center\" alignItems=\"flex-start\" xs={5} /* style={{width: '60vw'}} */>\n        <Paper elevation={2} className={classes.wrapper}>\n          <IconButton onClick={() => {getMessages()}} >\n            <AutorenewIcon />\n          </IconButton>\n         <span className={classes.header}>Upcoming appointments</span>\n          {(!messages || !messages.length) && <LinearProgress />}\n          <Grid container spacing={2}>\n            {messages && messages.map(message => (\n              <Grid container spacing={4} item xs={12} key={`message_${message.id}`}>\n                <Grid item xs={12}>\n                  <Paper className={classes.block} elevation={2}>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n                      <Grid item xs={1}><AccountCircle className={classes.icon}/></Grid>\n                      <Grid item container xs={9}>\n                        <Grid item xs={12} container direction=\"row\" justify=\"space-between\" alignItems=\"baseline\">\n                          <Grid item xs={8}>\n                            {message.user_name} / {message.phone_number}\n                          </Grid>\n                          <Grid style={{fontSize: 12}} item xs={4}>\n                            {message.date_time} \n                          </Grid> \n                        </Grid>\n                        <Divider component=\"div\" />\n                        <Grid item xs={12} style={{paddingTop: 8}}>\n                          {message.valid \n                            ? <span style={{color: 'green'}}>{message.action}</span>\n                            : <span style={{color: 'red'}}>We did not manage to split out this request</span>}\n                        </Grid>\n                        <span style={{fontSize: 12}}>Original text: {message.message_text}</span>\n                      </Grid>\n                      <Grid item xs={1} style={{textAlign: 'right'}}>\n                        <CallIcon className={classes.iconSmall}/>\n                        <ChatIcon className={classes.iconSmall}/>\n                      </Grid>\n                    </Grid>\n                    \n                  </Paper>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={4}>\n        <Paper elevation={2} className={classes.wrapper} style={{width: '30vw'}}>\n          <ScheduleChart/>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Messages;\n","import React, { useState } from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { MenuItem, Grid } from '@material-ui/core';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Menu from '@material-ui/core/Menu';\n\nimport { teal, blue } from '@material-ui/core/colors/';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ActionList from './ActionList';\nimport Messages from './Messages';\n\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport TextsmsIcon from '@material-ui/icons/Textsms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'left',\n    backgroundColor: theme.palette.grey[100],\n    height: '100%',\n  },\n  appBar: {\n    zIndex: 9999,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  sideBar: {\n      height: '100%',\n      width: theme.spacing(8), \n      position: 'fixed',\n      top: 64,\n      left: 0,\n      backgroundColor: teal[200],\n      padding: 6\n  },\n  iconSmall: {\n    fontSize: 30,\n    color: blue[100],\n  },\n  active: {\n    fontSize: 30,\n    color: 'white',\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const auth = true;\n\n  const [ page, setPage ] = useState('Messages');\n\n  return (\n    <div className={`App ${classes.root}`}>\n       <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            FRIDAY\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={() => {console.log('handleMenu')}}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={false}\n                onClose={() => {console.log('close')}}\n              >\n                <MenuItem onClick={() => {console.log('Profile')}}>Profile</MenuItem>\n                <MenuItem onClick={() => {console.log('My account')}}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\n        <Grid item className={classes.sideBar}>\n          <IconButton onClick={() => setPage('Messages')} >\n            <TextsmsIcon className={page === 'Messages' ? classes.active : classes.iconSmall}/>\n          </IconButton>\n          <IconButton onClick={() => setPage('ActionList')} >\n            <ViewListIcon className={page === 'ActionList' ? classes.active : classes.iconSmall}/>\n          </IconButton>\n          <IconButton >\n            <CalendarTodayIcon className={classes.iconSmall}/>\n          </IconButton>\n        </Grid>\n        <Grid container item direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          {page === 'ActionList' && <ActionList />}\n          {page === 'Messages' && <Messages />}\n        </Grid>\n      </Grid>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}